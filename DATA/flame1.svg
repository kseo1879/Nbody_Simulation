<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>memset_orig (1 samples, 0.04%)</title><rect x="83.3" y="245" width="0.5" height="15.0" fill="rgb(240,140,14)" rx="2" ry="2" />
<text  x="86.26" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.22%)</title><rect x="110.3" y="229" width="2.6" height="15.0" fill="rgb(248,213,16)" rx="2" ry="2" />
<text  x="113.28" y="239.5" ></text>
</g>
<g >
<title>__libc_start_main (1,882 samples, 82.87%)</title><rect x="112.9" y="357" width="977.9" height="15.0" fill="rgb(242,65,0)" rx="2" ry="2" />
<text  x="115.88" y="367.5" >__libc_start_main</text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.22%)</title><rect x="76.5" y="197" width="2.6" height="15.0" fill="rgb(207,200,50)" rx="2" ry="2" />
<text  x="79.51" y="207.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.04%)</title><rect x="1092.8" y="245" width="0.6" height="15.0" fill="rgb(248,69,41)" rx="2" ry="2" />
<text  x="1095.84" y="255.5" ></text>
</g>
<g >
<title>__lock_text_start (31 samples, 1.37%)</title><rect x="89.0" y="245" width="16.1" height="15.0" fill="rgb(234,136,53)" rx="2" ry="2" />
<text  x="91.98" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_exit (2 samples, 0.09%)</title><rect x="1093.4" y="325" width="1.0" height="15.0" fill="rgb(209,29,27)" rx="2" ry="2" />
<text  x="1096.36" y="335.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.04%)</title><rect x="109.2" y="213" width="0.6" height="15.0" fill="rgb(246,62,26)" rx="2" ry="2" />
<text  x="112.24" y="223.5" ></text>
</g>
<g >
<title>pthread_getattr_np (8 samples, 0.35%)</title><rect x="105.6" y="341" width="4.2" height="15.0" fill="rgb(239,40,53)" rx="2" ry="2" />
<text  x="108.61" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="68.7" y="229" width="0.5" height="15.0" fill="rgb(243,226,26)" rx="2" ry="2" />
<text  x="71.71" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.04%)</title><rect x="1094.4" y="325" width="0.5" height="15.0" fill="rgb(244,77,15)" rx="2" ry="2" />
<text  x="1097.39" y="335.5" ></text>
</g>
<g >
<title>__interceptor_pthread_create (18 samples, 0.79%)</title><rect x="1081.4" y="309" width="9.4" height="15.0" fill="rgb(209,40,4)" rx="2" ry="2" />
<text  x="1084.40" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.09%)</title><rect x="71.8" y="229" width="1.1" height="15.0" fill="rgb(242,93,28)" rx="2" ry="2" />
<text  x="74.83" y="239.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (7 samples, 0.31%)</title><rect x="105.6" y="165" width="3.6" height="15.0" fill="rgb(236,219,51)" rx="2" ry="2" />
<text  x="108.61" y="175.5" ></text>
</g>
<g >
<title>cap_vm_enough_memory (1 samples, 0.04%)</title><rect x="12.6" y="229" width="0.5" height="15.0" fill="rgb(234,175,7)" rx="2" ry="2" />
<text  x="15.60" y="239.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_memcg (1 samples, 0.04%)</title><rect x="72.9" y="229" width="0.5" height="15.0" fill="rgb(250,80,26)" rx="2" ry="2" />
<text  x="75.87" y="239.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.09%)</title><rect x="1093.4" y="261" width="1.0" height="15.0" fill="rgb(211,32,17)" rx="2" ry="2" />
<text  x="1096.36" y="271.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.09%)</title><rect x="69.8" y="341" width="1.0" height="15.0" fill="rgb(233,170,40)" rx="2" ry="2" />
<text  x="72.75" y="351.5" ></text>
</g>
<g >
<title>perf_event_fork (1 samples, 0.04%)</title><rect x="83.8" y="245" width="0.5" height="15.0" fill="rgb(246,179,2)" rx="2" ry="2" />
<text  x="86.78" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_exit (6 samples, 0.26%)</title><rect x="1164.5" y="309" width="3.2" height="15.0" fill="rgb(252,139,32)" rx="2" ry="2" />
<text  x="1167.54" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="69.2" y="213" width="0.6" height="15.0" fill="rgb(225,158,50)" rx="2" ry="2" />
<text  x="72.23" y="223.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.04%)</title><rect x="68.7" y="277" width="0.5" height="15.0" fill="rgb(225,51,28)" rx="2" ry="2" />
<text  x="71.71" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.22%)</title><rect x="110.3" y="213" width="2.6" height="15.0" fill="rgb(245,203,41)" rx="2" ry="2" />
<text  x="113.28" y="223.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.04%)</title><rect x="14.7" y="245" width="0.5" height="15.0" fill="rgb(231,137,10)" rx="2" ry="2" />
<text  x="17.68" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.22%)</title><rect x="76.5" y="213" width="2.6" height="15.0" fill="rgb(244,73,14)" rx="2" ry="2" />
<text  x="79.51" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="69.2" y="325" width="0.6" height="15.0" fill="rgb(214,133,51)" rx="2" ry="2" />
<text  x="72.23" y="335.5" ></text>
</g>
<g >
<title>inherit_event.isra.0 (7 samples, 0.31%)</title><rect x="84.8" y="213" width="3.7" height="15.0" fill="rgb(218,28,27)" rx="2" ry="2" />
<text  x="87.82" y="223.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (2 samples, 0.09%)</title><rect x="13.6" y="245" width="1.1" height="15.0" fill="rgb(245,116,25)" rx="2" ry="2" />
<text  x="16.64" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (4 samples, 0.18%)</title><rect x="12.6" y="309" width="2.1" height="15.0" fill="rgb(248,11,32)" rx="2" ry="2" />
<text  x="15.60" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="1090.8" y="341" width="1.5" height="15.0" fill="rgb(254,24,47)" rx="2" ry="2" />
<text  x="1093.76" y="351.5" ></text>
</g>
<g >
<title>mm_release (5 samples, 0.22%)</title><rect x="1165.1" y="261" width="2.6" height="15.0" fill="rgb(252,52,2)" rx="2" ry="2" />
<text  x="1168.06" y="271.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (1 samples, 0.04%)</title><rect x="68.7" y="261" width="0.5" height="15.0" fill="rgb(245,32,10)" rx="2" ry="2" />
<text  x="71.71" y="271.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.04%)</title><rect x="83.8" y="117" width="0.5" height="15.0" fill="rgb(250,13,48)" rx="2" ry="2" />
<text  x="86.78" y="127.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.22%)</title><rect x="1165.1" y="213" width="2.6" height="15.0" fill="rgb(250,214,29)" rx="2" ry="2" />
<text  x="1168.06" y="223.5" ></text>
</g>
<g >
<title>local_clock (1 samples, 0.04%)</title><rect x="83.8" y="149" width="0.5" height="15.0" fill="rgb(223,171,44)" rx="2" ry="2" />
<text  x="86.78" y="159.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (102 samples, 4.49%)</title><rect x="15.7" y="181" width="53.0" height="15.0" fill="rgb(252,25,42)" rx="2" ry="2" />
<text  x="18.72" y="191.5" >on_ea..</text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.04%)</title><rect x="1076.2" y="133" width="0.5" height="15.0" fill="rgb(219,25,0)" rx="2" ry="2" />
<text  x="1079.21" y="143.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.04%)</title><rect x="1076.2" y="85" width="0.5" height="15.0" fill="rgb(230,146,17)" rx="2" ry="2" />
<text  x="1079.21" y="95.5" ></text>
</g>
<g >
<title>start_thread (183 samples, 8.06%)</title><rect x="1094.9" y="357" width="95.1" height="15.0" fill="rgb(244,183,2)" rx="2" ry="2" />
<text  x="1097.91" y="367.5" >start_thread</text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.04%)</title><rect x="72.9" y="245" width="0.5" height="15.0" fill="rgb(210,201,41)" rx="2" ry="2" />
<text  x="75.87" y="255.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.26%)</title><rect x="109.8" y="325" width="3.1" height="15.0" fill="rgb(247,67,19)" rx="2" ry="2" />
<text  x="112.76" y="335.5" ></text>
</g>
<g >
<title>allocate_slab (1 samples, 0.04%)</title><rect x="86.4" y="117" width="0.5" height="15.0" fill="rgb(211,140,19)" rx="2" ry="2" />
<text  x="89.38" y="127.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.04%)</title><rect x="1094.4" y="245" width="0.5" height="15.0" fill="rgb(227,35,10)" rx="2" ry="2" />
<text  x="1097.39" y="255.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.04%)</title><rect x="68.2" y="117" width="0.5" height="15.0" fill="rgb(229,8,2)" rx="2" ry="2" />
<text  x="71.19" y="127.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.04%)</title><rect x="1091.8" y="277" width="0.5" height="15.0" fill="rgb(206,51,6)" rx="2" ry="2" />
<text  x="1094.80" y="287.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.04%)</title><rect x="68.7" y="245" width="0.5" height="15.0" fill="rgb(243,136,18)" rx="2" ry="2" />
<text  x="71.71" y="255.5" ></text>
</g>
<g >
<title>find_vmap_area (1 samples, 0.04%)</title><rect x="81.2" y="245" width="0.5" height="15.0" fill="rgb(235,24,42)" rx="2" ry="2" />
<text  x="84.18" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66 samples, 2.91%)</title><rect x="70.8" y="325" width="34.3" height="15.0" fill="rgb(223,147,21)" rx="2" ry="2" />
<text  x="73.79" y="335.5" >en..</text>
</g>
<g >
<title>__ieee754_pow_fma (122 samples, 5.37%)</title><rect x="1096.0" y="341" width="63.3" height="15.0" fill="rgb(239,2,53)" rx="2" ry="2" />
<text  x="1098.95" y="351.5" >__ieee..</text>
</g>
<g >
<title>swake_up_one (1 samples, 0.04%)</title><rect x="1076.2" y="69" width="0.5" height="15.0" fill="rgb(209,103,3)" rx="2" ry="2" />
<text  x="1079.21" y="79.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.22%)</title><rect x="1165.1" y="197" width="2.6" height="15.0" fill="rgb(223,168,12)" rx="2" ry="2" />
<text  x="1168.06" y="207.5" ></text>
</g>
<g >
<title>pow@@GLIBC_2.29 (12 samples, 0.53%)</title><rect x="1167.7" y="341" width="6.2" height="15.0" fill="rgb(231,135,47)" rx="2" ry="2" />
<text  x="1170.66" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1091.8" y="229" width="0.5" height="15.0" fill="rgb(215,122,33)" rx="2" ry="2" />
<text  x="1094.80" y="239.5" ></text>
</g>
<g >
<title>smp_call_function_many (7 samples, 0.31%)</title><rect x="105.6" y="101" width="3.6" height="15.0" fill="rgb(246,41,19)" rx="2" ry="2" />
<text  x="108.61" y="111.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (2 samples, 0.09%)</title><rect x="1093.4" y="277" width="1.0" height="15.0" fill="rgb(218,193,7)" rx="2" ry="2" />
<text  x="1096.36" y="287.5" ></text>
</g>
<g >
<title>sched_fork (1 samples, 0.04%)</title><rect x="88.5" y="245" width="0.5" height="15.0" fill="rgb(212,3,37)" rx="2" ry="2" />
<text  x="91.46" y="255.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1080.4" y="277" width="1.0" height="15.0" fill="rgb(205,183,10)" rx="2" ry="2" />
<text  x="1083.37" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="69.2" y="277" width="0.6" height="15.0" fill="rgb(248,216,23)" rx="2" ry="2" />
<text  x="72.23" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.09%)</title><rect x="110.3" y="149" width="1.0" height="15.0" fill="rgb(221,48,1)" rx="2" ry="2" />
<text  x="113.28" y="159.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.09%)</title><rect x="82.2" y="229" width="1.1" height="15.0" fill="rgb(222,91,18)" rx="2" ry="2" />
<text  x="85.22" y="239.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0.part.0 (7 samples, 0.31%)</title><rect x="84.8" y="229" width="3.7" height="15.0" fill="rgb(205,140,14)" rx="2" ry="2" />
<text  x="87.82" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.26%)</title><rect x="1164.5" y="325" width="3.2" height="15.0" fill="rgb(227,159,20)" rx="2" ry="2" />
<text  x="1167.54" y="335.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 3.65%)</title><rect x="69.8" y="357" width="43.1" height="15.0" fill="rgb(229,131,20)" rx="2" ry="2" />
<text  x="72.75" y="367.5" >[unk..</text>
</g>
<g >
<title>release_pages (1 samples, 0.04%)</title><rect x="1094.4" y="149" width="0.5" height="15.0" fill="rgb(213,172,22)" rx="2" ry="2" />
<text  x="1097.39" y="159.5" ></text>
</g>
<g >
<title>futex_exit_release (1 samples, 0.04%)</title><rect x="1164.5" y="261" width="0.6" height="15.0" fill="rgb(247,205,45)" rx="2" ry="2" />
<text  x="1167.54" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.09%)</title><rect x="110.3" y="181" width="1.0" height="15.0" fill="rgb(245,158,54)" rx="2" ry="2" />
<text  x="113.28" y="191.5" ></text>
</g>
<g >
<title>__clone (66 samples, 2.91%)</title><rect x="70.8" y="341" width="34.3" height="15.0" fill="rgb(230,107,44)" rx="2" ry="2" />
<text  x="73.79" y="351.5" >__..</text>
</g>
<g >
<title>step (1,882 samples, 82.87%)</title><rect x="112.9" y="325" width="977.9" height="15.0" fill="rgb(243,214,14)" rx="2" ry="2" />
<text  x="115.88" y="335.5" >step</text>
</g>
<g >
<title>flush_tlb_mm_range (102 samples, 4.49%)</title><rect x="15.7" y="213" width="53.0" height="15.0" fill="rgb(233,130,25)" rx="2" ry="2" />
<text  x="18.72" y="223.5" >flush..</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.04%)</title><rect x="1094.4" y="229" width="0.5" height="15.0" fill="rgb(241,126,5)" rx="2" ry="2" />
<text  x="1097.39" y="239.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (7 samples, 0.31%)</title><rect x="105.6" y="133" width="3.6" height="15.0" fill="rgb(234,51,27)" rx="2" ry="2" />
<text  x="108.61" y="143.5" ></text>
</g>
<g >
<title>ptep_clear_flush (7 samples, 0.31%)</title><rect x="105.6" y="181" width="3.6" height="15.0" fill="rgb(214,59,53)" rx="2" ry="2" />
<text  x="108.61" y="191.5" ></text>
</g>
<g >
<title>__interceptor_realloc (8 samples, 0.35%)</title><rect x="105.6" y="325" width="4.2" height="15.0" fill="rgb(231,46,48)" rx="2" ry="2" />
<text  x="108.61" y="335.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="1093.4" y="229" width="1.0" height="15.0" fill="rgb(245,62,21)" rx="2" ry="2" />
<text  x="1096.36" y="239.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (2 samples, 0.09%)</title><rect x="1090.8" y="261" width="1.0" height="15.0" fill="rgb(229,44,10)" rx="2" ry="2" />
<text  x="1093.76" y="271.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.04%)</title><rect x="83.8" y="197" width="0.5" height="15.0" fill="rgb(217,149,21)" rx="2" ry="2" />
<text  x="86.78" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="1092.3" y="341" width="1.1" height="15.0" fill="rgb(235,109,44)" rx="2" ry="2" />
<text  x="1095.32" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="1093.4" y="341" width="1.5" height="15.0" fill="rgb(246,226,17)" rx="2" ry="2" />
<text  x="1096.36" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="1093.4" y="357" width="1.5" height="15.0" fill="rgb(238,218,45)" rx="2" ry="2" />
<text  x="1096.36" y="367.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (1 samples, 0.04%)</title><rect x="86.4" y="181" width="0.5" height="15.0" fill="rgb(228,132,44)" rx="2" ry="2" />
<text  x="89.38" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_clone (66 samples, 2.91%)</title><rect x="70.8" y="293" width="34.3" height="15.0" fill="rgb(224,220,39)" rx="2" ry="2" />
<text  x="73.79" y="303.5" >__..</text>
</g>
<g >
<title>alloc_vmap_area (4 samples, 0.18%)</title><rect x="73.4" y="213" width="2.1" height="15.0" fill="rgb(246,56,51)" rx="2" ry="2" />
<text  x="76.39" y="223.5" ></text>
</g>
<g >
<title>futex_wake (5 samples, 0.22%)</title><rect x="1165.1" y="229" width="2.6" height="15.0" fill="rgb(205,22,31)" rx="2" ry="2" />
<text  x="1168.06" y="239.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.04%)</title><rect x="1094.4" y="293" width="0.5" height="15.0" fill="rgb(249,58,6)" rx="2" ry="2" />
<text  x="1097.39" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (936 samples, 41.22%)</title><rect x="594.0" y="293" width="486.4" height="15.0" fill="rgb(236,168,32)" rx="2" ry="2" />
<text  x="597.02" y="303.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>alloc_slab_page (1 samples, 0.04%)</title><rect x="86.4" y="101" width="0.5" height="15.0" fill="rgb(214,161,36)" rx="2" ry="2" />
<text  x="89.38" y="111.5" ></text>
</g>
<g >
<title>clear_page_orig (1 samples, 0.04%)</title><rect x="86.4" y="37" width="0.5" height="15.0" fill="rgb(221,217,26)" rx="2" ry="2" />
<text  x="89.38" y="47.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="1092.8" y="261" width="0.6" height="15.0" fill="rgb(253,29,35)" rx="2" ry="2" />
<text  x="1095.84" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.04%)</title><rect x="1094.4" y="133" width="0.5" height="15.0" fill="rgb(223,53,41)" rx="2" ry="2" />
<text  x="1097.39" y="143.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.04%)</title><rect x="1091.8" y="245" width="0.5" height="15.0" fill="rgb(228,41,24)" rx="2" ry="2" />
<text  x="1094.80" y="255.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="86.4" y="165" width="0.5" height="15.0" fill="rgb(228,94,38)" rx="2" ry="2" />
<text  x="89.38" y="175.5" ></text>
</g>
<g >
<title>__vm_munmap (105 samples, 4.62%)</title><rect x="14.7" y="293" width="54.5" height="15.0" fill="rgb(217,61,44)" rx="2" ry="2" />
<text  x="17.68" y="303.5" >__vm_..</text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.04%)</title><rect x="111.8" y="181" width="0.6" height="15.0" fill="rgb(227,74,54)" rx="2" ry="2" />
<text  x="114.84" y="191.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.04%)</title><rect x="1094.4" y="165" width="0.5" height="15.0" fill="rgb(237,198,35)" rx="2" ry="2" />
<text  x="1097.39" y="175.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (115 samples, 5.06%)</title><rect x="10.0" y="357" width="59.8" height="15.0" fill="rgb(235,167,6)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >[libas..</text>
</g>
<g >
<title>__kmalloc_node (1 samples, 0.04%)</title><rect x="75.5" y="229" width="0.5" height="15.0" fill="rgb(236,82,11)" rx="2" ry="2" />
<text  x="78.47" y="239.5" ></text>
</g>
<g >
<title>__strpbrk_sse42 (1 samples, 0.04%)</title><rect x="105.1" y="341" width="0.5" height="15.0" fill="rgb(254,13,16)" rx="2" ry="2" />
<text  x="108.09" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.04%)</title><rect x="68.2" y="85" width="0.5" height="15.0" fill="rgb(240,192,8)" rx="2" ry="2" />
<text  x="71.19" y="95.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.09%)</title><rect x="1076.2" y="165" width="1.0" height="15.0" fill="rgb(235,89,6)" rx="2" ry="2" />
<text  x="1079.21" y="175.5" ></text>
</g>
<g >
<title>pthread_create@@GLIBC_2.2.5 (2 samples, 0.09%)</title><rect x="1089.7" y="293" width="1.1" height="15.0" fill="rgb(234,176,9)" rx="2" ry="2" />
<text  x="1092.72" y="303.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (4 samples, 0.18%)</title><rect x="12.6" y="277" width="2.1" height="15.0" fill="rgb(228,57,29)" rx="2" ry="2" />
<text  x="15.60" y="287.5" ></text>
</g>
<g >
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="1090.8" y="213" width="1.0" height="15.0" fill="rgb(229,201,37)" rx="2" ry="2" />
<text  x="1093.76" y="223.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1080.4" y="261" width="1.0" height="15.0" fill="rgb(242,46,12)" rx="2" ry="2" />
<text  x="1083.37" y="271.5" ></text>
</g>
<g >
<title>wp_page_copy (7 samples, 0.31%)</title><rect x="105.6" y="197" width="3.6" height="15.0" fill="rgb(240,216,39)" rx="2" ry="2" />
<text  x="108.61" y="207.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="69.2" y="309" width="0.6" height="15.0" fill="rgb(213,223,4)" rx="2" ry="2" />
<text  x="72.23" y="319.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.04%)</title><rect x="1092.8" y="293" width="0.6" height="15.0" fill="rgb(220,205,14)" rx="2" ry="2" />
<text  x="1095.84" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="70.3" y="325" width="0.5" height="15.0" fill="rgb(214,116,7)" rx="2" ry="2" />
<text  x="73.27" y="335.5" ></text>
</g>
<g >
<title>__sched_fork (1 samples, 0.04%)</title><rect x="88.5" y="229" width="0.5" height="15.0" fill="rgb(252,83,29)" rx="2" ry="2" />
<text  x="91.46" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1092.8" y="213" width="0.6" height="15.0" fill="rgb(235,33,19)" rx="2" ry="2" />
<text  x="1095.84" y="223.5" ></text>
</g>
<g >
<title>perf_event_alloc (7 samples, 0.31%)</title><rect x="84.8" y="197" width="3.7" height="15.0" fill="rgb(222,189,32)" rx="2" ry="2" />
<text  x="87.82" y="207.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.09%)</title><rect x="1093.4" y="293" width="1.0" height="15.0" fill="rgb(226,163,8)" rx="2" ry="2" />
<text  x="1096.36" y="303.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.04%)</title><rect x="109.2" y="245" width="0.6" height="15.0" fill="rgb(238,149,16)" rx="2" ry="2" />
<text  x="112.24" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (66 samples, 2.91%)</title><rect x="70.8" y="309" width="34.3" height="15.0" fill="rgb(253,171,50)" rx="2" ry="2" />
<text  x="73.79" y="319.5" >do..</text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.35%)</title><rect x="105.6" y="277" width="4.2" height="15.0" fill="rgb(220,39,32)" rx="2" ry="2" />
<text  x="108.61" y="287.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.04%)</title><rect x="86.4" y="133" width="0.5" height="15.0" fill="rgb(212,21,3)" rx="2" ry="2" />
<text  x="89.38" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.13%)</title><rect x="81.7" y="245" width="1.6" height="15.0" fill="rgb(237,204,40)" rx="2" ry="2" />
<text  x="84.70" y="255.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.04%)</title><rect x="1076.7" y="117" width="0.5" height="15.0" fill="rgb(224,176,37)" rx="2" ry="2" />
<text  x="1079.73" y="127.5" ></text>
</g>
<g >
<title>insert_vmap_area_augment.constprop.0 (1 samples, 0.04%)</title><rect x="74.9" y="197" width="0.6" height="15.0" fill="rgb(212,138,27)" rx="2" ry="2" />
<text  x="77.95" y="207.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (1 samples, 0.04%)</title><rect x="70.3" y="293" width="0.5" height="15.0" fill="rgb(208,21,48)" rx="2" ry="2" />
<text  x="73.27" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.04%)</title><rect x="112.4" y="165" width="0.5" height="15.0" fill="rgb(249,72,36)" rx="2" ry="2" />
<text  x="115.36" y="175.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="86.4" y="69" width="0.5" height="15.0" fill="rgb(224,124,9)" rx="2" ry="2" />
<text  x="89.38" y="79.5" ></text>
</g>
<g >
<title>wake_up_new_task (31 samples, 1.37%)</title><rect x="89.0" y="261" width="16.1" height="15.0" fill="rgb(246,158,42)" rx="2" ry="2" />
<text  x="91.98" y="271.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.22%)</title><rect x="1165.1" y="245" width="2.6" height="15.0" fill="rgb(205,198,32)" rx="2" ry="2" />
<text  x="1168.06" y="255.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.09%)</title><rect x="1076.2" y="197" width="1.0" height="15.0" fill="rgb(240,53,35)" rx="2" ry="2" />
<text  x="1079.21" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.26%)</title><rect x="1164.5" y="341" width="3.2" height="15.0" fill="rgb(228,78,1)" rx="2" ry="2" />
<text  x="1167.54" y="351.5" ></text>
</g>
<g >
<title>__do_munmap (104 samples, 4.58%)</title><rect x="14.7" y="277" width="54.0" height="15.0" fill="rgb(250,95,45)" rx="2" ry="2" />
<text  x="17.68" y="287.5" >__do_..</text>
</g>
<g >
<title>__pthread_clockjoin_ex (2 samples, 0.09%)</title><rect x="1092.3" y="357" width="1.1" height="15.0" fill="rgb(254,115,54)" rx="2" ry="2" />
<text  x="1095.32" y="367.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.09%)</title><rect x="1090.8" y="229" width="1.0" height="15.0" fill="rgb(220,78,12)" rx="2" ry="2" />
<text  x="1093.76" y="239.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.35%)</title><rect x="105.6" y="293" width="4.2" height="15.0" fill="rgb(217,39,37)" rx="2" ry="2" />
<text  x="108.61" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.09%)</title><rect x="1076.2" y="149" width="1.0" height="15.0" fill="rgb(231,151,28)" rx="2" ry="2" />
<text  x="1079.21" y="159.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (102 samples, 4.49%)</title><rect x="15.7" y="245" width="53.0" height="15.0" fill="rgb(241,218,41)" rx="2" ry="2" />
<text  x="18.72" y="255.5" >tlb_f..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (111 samples, 4.89%)</title><rect x="11.6" y="341" width="57.6" height="15.0" fill="rgb(244,172,26)" rx="2" ry="2" />
<text  x="14.56" y="351.5" >entry_..</text>
</g>
<g >
<title>free_pgtables (1 samples, 0.04%)</title><rect x="15.2" y="245" width="0.5" height="15.0" fill="rgb(222,184,10)" rx="2" ry="2" />
<text  x="18.20" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.04%)</title><rect x="112.4" y="181" width="0.5" height="15.0" fill="rgb(218,152,8)" rx="2" ry="2" />
<text  x="115.36" y="191.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (7 samples, 0.31%)</title><rect x="105.6" y="149" width="3.6" height="15.0" fill="rgb(250,118,51)" rx="2" ry="2" />
<text  x="108.61" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="86.4" y="53" width="0.5" height="15.0" fill="rgb(207,85,26)" rx="2" ry="2" />
<text  x="89.38" y="63.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="69.2" y="229" width="0.6" height="15.0" fill="rgb(214,229,45)" rx="2" ry="2" />
<text  x="72.23" y="239.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.04%)</title><rect x="1076.2" y="101" width="0.5" height="15.0" fill="rgb(254,7,37)" rx="2" ry="2" />
<text  x="1079.21" y="111.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.04%)</title><rect x="1094.4" y="261" width="0.5" height="15.0" fill="rgb(217,144,20)" rx="2" ry="2" />
<text  x="1097.39" y="271.5" ></text>
</g>
<g >
<title>alloc_pid (2 samples, 0.09%)</title><rect x="80.1" y="245" width="1.1" height="15.0" fill="rgb(231,92,40)" rx="2" ry="2" />
<text  x="83.15" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.09%)</title><rect x="1093.4" y="245" width="1.0" height="15.0" fill="rgb(215,157,33)" rx="2" ry="2" />
<text  x="1096.36" y="255.5" ></text>
</g>
<g >
<title>__madvise (3 samples, 0.13%)</title><rect x="1090.8" y="357" width="1.5" height="15.0" fill="rgb(239,13,5)" rx="2" ry="2" />
<text  x="1093.76" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_current (6 samples, 0.26%)</title><rect x="76.0" y="229" width="3.1" height="15.0" fill="rgb(211,179,29)" rx="2" ry="2" />
<text  x="78.99" y="239.5" ></text>
</g>
<g >
<title>schedule (542 samples, 23.87%)</title><rect x="795.6" y="229" width="281.6" height="15.0" fill="rgb(241,64,32)" rx="2" ry="2" />
<text  x="798.63" y="239.5" >schedule</text>
</g>
<g >
<title>map_vm_area (2 samples, 0.09%)</title><rect x="79.1" y="229" width="1.0" height="15.0" fill="rgb(231,216,26)" rx="2" ry="2" />
<text  x="82.11" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (18 samples, 0.79%)</title><rect x="594.0" y="277" width="9.4" height="15.0" fill="rgb(243,66,27)" rx="2" ry="2" />
<text  x="597.02" y="287.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (1 samples, 0.04%)</title><rect x="68.2" y="101" width="0.5" height="15.0" fill="rgb(213,6,1)" rx="2" ry="2" />
<text  x="71.19" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="1092.3" y="325" width="1.1" height="15.0" fill="rgb(243,98,16)" rx="2" ry="2" />
<text  x="1095.32" y="335.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.04%)</title><rect x="78.6" y="181" width="0.5" height="15.0" fill="rgb(205,210,1)" rx="2" ry="2" />
<text  x="81.59" y="191.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.04%)</title><rect x="86.4" y="149" width="0.5" height="15.0" fill="rgb(214,85,25)" rx="2" ry="2" />
<text  x="89.38" y="159.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="69.2" y="341" width="0.6" height="15.0" fill="rgb(213,37,32)" rx="2" ry="2" />
<text  x="72.23" y="351.5" ></text>
</g>
<g >
<title>do_wp_page (7 samples, 0.31%)</title><rect x="105.6" y="213" width="3.6" height="15.0" fill="rgb(206,135,39)" rx="2" ry="2" />
<text  x="108.61" y="223.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read (1 samples, 0.04%)</title><rect x="83.8" y="101" width="0.5" height="15.0" fill="rgb(243,61,53)" rx="2" ry="2" />
<text  x="86.78" y="111.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.26%)</title><rect x="109.8" y="293" width="3.1" height="15.0" fill="rgb(236,177,34)" rx="2" ry="2" />
<text  x="112.76" y="303.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="75.5" y="213" width="0.5" height="15.0" fill="rgb(242,143,31)" rx="2" ry="2" />
<text  x="78.47" y="223.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.04%)</title><rect x="1094.4" y="213" width="0.5" height="15.0" fill="rgb(252,168,30)" rx="2" ry="2" />
<text  x="1097.39" y="223.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="14.7" y="213" width="0.5" height="15.0" fill="rgb(229,225,40)" rx="2" ry="2" />
<text  x="17.68" y="223.5" ></text>
</g>
<g >
<title>__vma_adjust (1 samples, 0.04%)</title><rect x="13.1" y="213" width="0.5" height="15.0" fill="rgb(253,35,0)" rx="2" ry="2" />
<text  x="16.12" y="223.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.04%)</title><rect x="110.8" y="133" width="0.5" height="15.0" fill="rgb(229,204,16)" rx="2" ry="2" />
<text  x="113.80" y="143.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.04%)</title><rect x="86.4" y="85" width="0.5" height="15.0" fill="rgb(216,150,46)" rx="2" ry="2" />
<text  x="89.38" y="95.5" ></text>
</g>
<g >
<title>clear_page_orig (4 samples, 0.18%)</title><rect x="76.5" y="181" width="2.1" height="15.0" fill="rgb(211,83,45)" rx="2" ry="2" />
<text  x="79.51" y="191.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="14.7" y="229" width="0.5" height="15.0" fill="rgb(213,21,22)" rx="2" ry="2" />
<text  x="17.68" y="239.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (7 samples, 0.31%)</title><rect x="105.6" y="117" width="3.6" height="15.0" fill="rgb(231,85,10)" rx="2" ry="2" />
<text  x="108.61" y="127.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1076.2" y="53" width="0.5" height="15.0" fill="rgb(218,140,35)" rx="2" ry="2" />
<text  x="1079.21" y="63.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (1 samples, 0.04%)</title><rect x="105.1" y="325" width="0.5" height="15.0" fill="rgb(209,183,42)" rx="2" ry="2" />
<text  x="108.09" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (105 samples, 4.62%)</title><rect x="14.7" y="309" width="54.5" height="15.0" fill="rgb(231,148,50)" rx="2" ry="2" />
<text  x="17.68" y="319.5" >__x64..</text>
</g>
<g >
<title>futex_wait (1 samples, 0.04%)</title><rect x="1092.8" y="277" width="0.6" height="15.0" fill="rgb(208,229,16)" rx="2" ry="2" />
<text  x="1095.84" y="287.5" ></text>
</g>
<g >
<title>perf_event_task (1 samples, 0.04%)</title><rect x="83.8" y="229" width="0.5" height="15.0" fill="rgb(236,120,23)" rx="2" ry="2" />
<text  x="86.78" y="239.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.04%)</title><rect x="72.9" y="213" width="0.5" height="15.0" fill="rgb(229,33,18)" rx="2" ry="2" />
<text  x="75.87" y="223.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1091.8" y="213" width="0.5" height="15.0" fill="rgb(208,14,46)" rx="2" ry="2" />
<text  x="1094.80" y="223.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.04%)</title><rect x="111.3" y="181" width="0.5" height="15.0" fill="rgb(215,179,44)" rx="2" ry="2" />
<text  x="114.32" y="191.5" ></text>
</g>
<g >
<title>exit_mm_release (6 samples, 0.26%)</title><rect x="1164.5" y="277" width="3.2" height="15.0" fill="rgb(213,81,6)" rx="2" ry="2" />
<text  x="1167.54" y="287.5" ></text>
</g>
<g >
<title>do_mmap (2 samples, 0.09%)</title><rect x="12.6" y="261" width="1.0" height="15.0" fill="rgb(231,62,49)" rx="2" ry="2" />
<text  x="15.60" y="271.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="109.2" y="197" width="0.6" height="15.0" fill="rgb(226,18,8)" rx="2" ry="2" />
<text  x="112.24" y="207.5" ></text>
</g>
<g >
<title>do_exit (2 samples, 0.09%)</title><rect x="1093.4" y="309" width="1.0" height="15.0" fill="rgb(242,179,12)" rx="2" ry="2" />
<text  x="1096.36" y="319.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="1076.7" y="133" width="0.5" height="15.0" fill="rgb(238,90,43)" rx="2" ry="2" />
<text  x="1079.73" y="143.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.04%)</title><rect x="1076.2" y="117" width="0.5" height="15.0" fill="rgb(231,189,26)" rx="2" ry="2" />
<text  x="1079.21" y="127.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.09%)</title><rect x="1090.8" y="245" width="1.0" height="15.0" fill="rgb(250,213,41)" rx="2" ry="2" />
<text  x="1093.76" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.31%)</title><rect x="105.6" y="229" width="3.6" height="15.0" fill="rgb(241,42,39)" rx="2" ry="2" />
<text  x="108.61" y="239.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.04%)</title><rect x="1094.4" y="309" width="0.5" height="15.0" fill="rgb(243,125,42)" rx="2" ry="2" />
<text  x="1097.39" y="319.5" ></text>
</g>
<g >
<title>init_numa_balancing (1 samples, 0.04%)</title><rect x="88.5" y="213" width="0.5" height="15.0" fill="rgb(218,201,35)" rx="2" ry="2" />
<text  x="91.46" y="223.5" ></text>
</g>
<g >
<title>velocity_update (31 samples, 1.37%)</title><rect x="1173.9" y="341" width="16.1" height="15.0" fill="rgb(239,165,7)" rx="2" ry="2" />
<text  x="1176.89" y="351.5" ></text>
</g>
<g >
<title>__sqrt (5 samples, 0.22%)</title><rect x="1159.3" y="341" width="2.6" height="15.0" fill="rgb(206,152,11)" rx="2" ry="2" />
<text  x="1162.34" y="351.5" ></text>
</g>
<g >
<title>down_write_killable (2 samples, 0.09%)</title><rect x="13.6" y="261" width="1.1" height="15.0" fill="rgb(207,179,48)" rx="2" ry="2" />
<text  x="16.64" y="271.5" ></text>
</g>
<g >
<title>perf_event_init_task (8 samples, 0.35%)</title><rect x="84.3" y="245" width="4.2" height="15.0" fill="rgb(214,165,16)" rx="2" ry="2" />
<text  x="87.30" y="255.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.04%)</title><rect x="83.8" y="133" width="0.5" height="15.0" fill="rgb(252,180,29)" rx="2" ry="2" />
<text  x="86.78" y="143.5" ></text>
</g>
<g >
<title>[libm-2.31.so] (2 samples, 0.09%)</title><rect x="1094.9" y="341" width="1.1" height="15.0" fill="rgb(242,213,41)" rx="2" ry="2" />
<text  x="1097.91" y="351.5" ></text>
</g>
<g >
<title>main (1,882 samples, 82.87%)</title><rect x="112.9" y="341" width="977.9" height="15.0" fill="rgb(235,92,20)" rx="2" ry="2" />
<text  x="115.88" y="351.5" >main</text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.09%)</title><rect x="110.3" y="165" width="1.0" height="15.0" fill="rgb(238,160,46)" rx="2" ry="2" />
<text  x="113.28" y="175.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.09%)</title><rect x="1076.2" y="181" width="1.0" height="15.0" fill="rgb(247,27,1)" rx="2" ry="2" />
<text  x="1079.21" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6 samples, 0.26%)</title><rect x="109.8" y="245" width="3.1" height="15.0" fill="rgb(218,81,29)" rx="2" ry="2" />
<text  x="112.76" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.31%)</title><rect x="105.6" y="245" width="3.6" height="15.0" fill="rgb(246,43,10)" rx="2" ry="2" />
<text  x="108.61" y="255.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (2 samples, 0.09%)</title><rect x="603.4" y="277" width="1.0" height="15.0" fill="rgb(221,26,12)" rx="2" ry="2" />
<text  x="606.38" y="287.5" ></text>
</g>
<g >
<title>do_sched_yield (6 samples, 0.26%)</title><rect x="1077.2" y="261" width="3.2" height="15.0" fill="rgb(248,141,34)" rx="2" ry="2" />
<text  x="1080.25" y="271.5" ></text>
</g>
<g >
<title>downgrade_write (1 samples, 0.04%)</title><rect x="14.7" y="261" width="0.5" height="15.0" fill="rgb(238,228,9)" rx="2" ry="2" />
<text  x="17.68" y="271.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (1,864 samples, 82.08%)</title><rect x="112.9" y="309" width="968.5" height="15.0" fill="rgb(248,91,15)" rx="2" ry="2" />
<text  x="115.88" y="319.5" >[libasan.so.5.0.0]</text>
</g>
<g >
<title>mmap_region (2 samples, 0.09%)</title><rect x="12.6" y="245" width="1.0" height="15.0" fill="rgb(245,9,27)" rx="2" ry="2" />
<text  x="15.60" y="255.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (102 samples, 4.49%)</title><rect x="15.7" y="229" width="53.0" height="15.0" fill="rgb(229,115,31)" rx="2" ry="2" />
<text  x="18.72" y="239.5" >tlb_f..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="68.7" y="213" width="0.5" height="15.0" fill="rgb(246,147,47)" rx="2" ry="2" />
<text  x="71.71" y="223.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.04%)</title><rect x="83.8" y="213" width="0.5" height="15.0" fill="rgb(219,10,9)" rx="2" ry="2" />
<text  x="86.78" y="223.5" ></text>
</g>
<g >
<title>perf_event_task_output (1 samples, 0.04%)</title><rect x="83.8" y="181" width="0.5" height="15.0" fill="rgb(217,168,9)" rx="2" ry="2" />
<text  x="86.78" y="191.5" ></text>
</g>
<g >
<title>do_anonymous_page (5 samples, 0.22%)</title><rect x="110.3" y="197" width="2.6" height="15.0" fill="rgb(224,151,39)" rx="2" ry="2" />
<text  x="113.28" y="207.5" ></text>
</g>
<g >
<title>clear_page_orig (1 samples, 0.04%)</title><rect x="110.3" y="133" width="0.5" height="15.0" fill="rgb(212,4,4)" rx="2" ry="2" />
<text  x="113.28" y="143.5" ></text>
</g>
<g >
<title>__sqrt_finite@GLIBC_2.15 (5 samples, 0.22%)</title><rect x="1161.9" y="341" width="2.6" height="15.0" fill="rgb(221,194,3)" rx="2" ry="2" />
<text  x="1164.94" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.26%)</title><rect x="109.8" y="277" width="3.1" height="15.0" fill="rgb(249,93,14)" rx="2" ry="2" />
<text  x="112.76" y="287.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1080.4" y="293" width="1.0" height="15.0" fill="rgb(252,78,50)" rx="2" ry="2" />
<text  x="1083.37" y="303.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (1 samples, 0.04%)</title><rect x="1090.2" y="277" width="0.6" height="15.0" fill="rgb(214,160,52)" rx="2" ry="2" />
<text  x="1093.24" y="287.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.04%)</title><rect x="1092.8" y="229" width="0.6" height="15.0" fill="rgb(230,220,3)" rx="2" ry="2" />
<text  x="1095.84" y="239.5" ></text>
</g>
<g >
<title>__do_sys_madvise (3 samples, 0.13%)</title><rect x="1090.8" y="293" width="1.5" height="15.0" fill="rgb(212,8,7)" rx="2" ry="2" />
<text  x="1093.76" y="303.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="81.7" y="229" width="0.5" height="15.0" fill="rgb(229,132,48)" rx="2" ry="2" />
<text  x="84.70" y="239.5" ></text>
</g>
<g >
<title>smp_call_function_many (102 samples, 4.49%)</title><rect x="15.7" y="149" width="53.0" height="15.0" fill="rgb(221,116,28)" rx="2" ry="2" />
<text  x="18.72" y="159.5" >smp_c..</text>
</g>
<g >
<title>free_pgd_range (1 samples, 0.04%)</title><rect x="15.2" y="229" width="0.5" height="15.0" fill="rgb(230,96,30)" rx="2" ry="2" />
<text  x="18.20" y="239.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.04%)</title><rect x="108.7" y="69" width="0.5" height="15.0" fill="rgb(248,143,3)" rx="2" ry="2" />
<text  x="111.72" y="79.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="69.2" y="293" width="0.6" height="15.0" fill="rgb(238,209,12)" rx="2" ry="2" />
<text  x="72.23" y="303.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (2 samples, 0.09%)</title><rect x="13.6" y="229" width="1.1" height="15.0" fill="rgb(251,39,32)" rx="2" ry="2" />
<text  x="16.64" y="239.5" ></text>
</g>
<g >
<title>__perf_event_header__init_id.isra.0 (1 samples, 0.04%)</title><rect x="83.8" y="165" width="0.5" height="15.0" fill="rgb(216,1,18)" rx="2" ry="2" />
<text  x="86.78" y="175.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="69.2" y="245" width="0.6" height="15.0" fill="rgb(224,163,54)" rx="2" ry="2" />
<text  x="72.23" y="255.5" ></text>
</g>
<g >
<title>task_scan_max (1 samples, 0.04%)</title><rect x="88.5" y="197" width="0.5" height="15.0" fill="rgb(231,71,45)" rx="2" ry="2" />
<text  x="91.46" y="207.5" ></text>
</g>
<g >
<title>__delayacct_tsk_init (2 samples, 0.09%)</title><rect x="71.8" y="245" width="1.1" height="15.0" fill="rgb(209,31,54)" rx="2" ry="2" />
<text  x="74.83" y="255.5" ></text>
</g>
<g >
<title>__get_user_8 (1 samples, 0.04%)</title><rect x="1164.5" y="245" width="0.6" height="15.0" fill="rgb(210,213,25)" rx="2" ry="2" />
<text  x="1167.54" y="255.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.35%)</title><rect x="105.6" y="309" width="4.2" height="15.0" fill="rgb(251,29,53)" rx="2" ry="2" />
<text  x="108.61" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="109.2" y="181" width="0.6" height="15.0" fill="rgb(242,227,12)" rx="2" ry="2" />
<text  x="112.24" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="70.3" y="309" width="0.5" height="15.0" fill="rgb(245,171,7)" rx="2" ry="2" />
<text  x="73.27" y="319.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.04%)</title><rect x="69.2" y="197" width="0.6" height="15.0" fill="rgb(254,186,4)" rx="2" ry="2" />
<text  x="72.23" y="207.5" ></text>
</g>
<g >
<title>insert_vmap_area.constprop.0 (1 samples, 0.04%)</title><rect x="74.4" y="197" width="0.5" height="15.0" fill="rgb(246,134,16)" rx="2" ry="2" />
<text  x="77.43" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (542 samples, 23.87%)</title><rect x="795.6" y="261" width="281.6" height="15.0" fill="rgb(231,119,22)" rx="2" ry="2" />
<text  x="798.63" y="271.5" >__x64_sys_sched_yield</text>
</g>
<g >
<title>vma_merge (1 samples, 0.04%)</title><rect x="13.1" y="229" width="0.5" height="15.0" fill="rgb(232,40,38)" rx="2" ry="2" />
<text  x="16.12" y="239.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.04%)</title><rect x="72.4" y="213" width="0.5" height="15.0" fill="rgb(209,133,44)" rx="2" ry="2" />
<text  x="75.35" y="223.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.09%)</title><rect x="1090.8" y="277" width="1.0" height="15.0" fill="rgb(237,182,34)" rx="2" ry="2" />
<text  x="1093.76" y="287.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (102 samples, 4.49%)</title><rect x="15.7" y="165" width="53.0" height="15.0" fill="rgb(215,155,35)" rx="2" ry="2" />
<text  x="18.72" y="175.5" >on_ea..</text>
</g>
<g >
<title>__x64_sys_madvise (3 samples, 0.13%)</title><rect x="1090.8" y="309" width="1.5" height="15.0" fill="rgb(212,49,24)" rx="2" ry="2" />
<text  x="1093.76" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="69.2" y="261" width="0.6" height="15.0" fill="rgb(229,100,32)" rx="2" ry="2" />
<text  x="72.23" y="271.5" ></text>
</g>
<g >
<title>__get_vm_area_node (4 samples, 0.18%)</title><rect x="73.4" y="229" width="2.1" height="15.0" fill="rgb(215,212,47)" rx="2" ry="2" />
<text  x="76.39" y="239.5" ></text>
</g>
<g >
<title>do_exit (6 samples, 0.26%)</title><rect x="1164.5" y="293" width="3.2" height="15.0" fill="rgb(225,1,31)" rx="2" ry="2" />
<text  x="1167.54" y="303.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (1 samples, 0.04%)</title><rect x="1091.8" y="261" width="0.5" height="15.0" fill="rgb(239,198,34)" rx="2" ry="2" />
<text  x="1094.80" y="271.5" ></text>
</g>
<g >
<title>all (2,271 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(254,217,12)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (102 samples, 4.49%)</title><rect x="15.7" y="197" width="53.0" height="15.0" fill="rgb(220,64,53)" rx="2" ry="2" />
<text  x="18.72" y="207.5" >nativ..</text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.22%)</title><rect x="1165.1" y="181" width="2.6" height="15.0" fill="rgb(211,215,17)" rx="2" ry="2" />
<text  x="1168.06" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (8 samples, 0.35%)</title><rect x="105.6" y="261" width="4.2" height="15.0" fill="rgb(239,101,44)" rx="2" ry="2" />
<text  x="108.61" y="271.5" ></text>
</g>
<g >
<title>nbody (2,271 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(248,201,46)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >nbody</text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="1092.3" y="309" width="1.1" height="15.0" fill="rgb(244,107,45)" rx="2" ry="2" />
<text  x="1095.32" y="319.5" ></text>
</g>
<g >
<title>task_nr_scan_windows (1 samples, 0.04%)</title><rect x="88.5" y="181" width="0.5" height="15.0" fill="rgb(227,203,40)" rx="2" ry="2" />
<text  x="91.46" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (916 samples, 40.33%)</title><rect x="604.4" y="277" width="476.0" height="15.0" fill="rgb(249,140,13)" rx="2" ry="2" />
<text  x="607.42" y="287.5" >do_syscall_64</text>
</g>
<g >
<title>rwsem_wake.isra.0 (1 samples, 0.04%)</title><rect x="109.2" y="229" width="0.6" height="15.0" fill="rgb(226,119,24)" rx="2" ry="2" />
<text  x="112.24" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.26%)</title><rect x="109.8" y="261" width="3.1" height="15.0" fill="rgb(220,203,32)" rx="2" ry="2" />
<text  x="112.76" y="271.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.04%)</title><rect x="1094.4" y="277" width="0.5" height="15.0" fill="rgb(245,105,32)" rx="2" ry="2" />
<text  x="1097.39" y="287.5" ></text>
</g>
<g >
<title>step (6 samples, 0.26%)</title><rect x="109.8" y="341" width="3.1" height="15.0" fill="rgb(213,229,15)" rx="2" ry="2" />
<text  x="112.76" y="351.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (1 samples, 0.04%)</title><rect x="108.7" y="85" width="0.5" height="15.0" fill="rgb(253,209,41)" rx="2" ry="2" />
<text  x="111.72" y="95.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1 samples, 0.04%)</title><rect x="1094.4" y="197" width="0.5" height="15.0" fill="rgb(214,102,8)" rx="2" ry="2" />
<text  x="1097.39" y="207.5" ></text>
</g>
<g >
<title>memset_orig (3 samples, 0.13%)</title><rect x="86.9" y="181" width="1.6" height="15.0" fill="rgb(243,183,52)" rx="2" ry="2" />
<text  x="89.90" y="191.5" ></text>
</g>
<g >
<title>smp_call_function_single (30 samples, 1.32%)</title><rect x="53.1" y="133" width="15.6" height="15.0" fill="rgb(231,202,45)" rx="2" ry="2" />
<text  x="56.13" y="143.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (4 samples, 0.18%)</title><rect x="12.6" y="293" width="2.1" height="15.0" fill="rgb(244,92,19)" rx="2" ry="2" />
<text  x="15.60" y="303.5" ></text>
</g>
<g >
<title>_do_fork (66 samples, 2.91%)</title><rect x="70.8" y="277" width="34.3" height="15.0" fill="rgb(243,160,21)" rx="2" ry="2" />
<text  x="73.79" y="287.5" >_d..</text>
</g>
<g >
<title>do_syscall_64 (111 samples, 4.89%)</title><rect x="11.6" y="325" width="57.6" height="15.0" fill="rgb(234,46,30)" rx="2" ry="2" />
<text  x="14.56" y="335.5" >do_sys..</text>
</g>
<g >
<title>__sched_text_start (533 samples, 23.47%)</title><rect x="800.3" y="213" width="276.9" height="15.0" fill="rgb(244,78,4)" rx="2" ry="2" />
<text  x="803.30" y="223.5" >__sched_text_start</text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="1094.4" y="181" width="0.5" height="15.0" fill="rgb(242,120,25)" rx="2" ry="2" />
<text  x="1097.39" y="191.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (13 samples, 0.57%)</title><rect x="73.4" y="245" width="6.7" height="15.0" fill="rgb(236,208,28)" rx="2" ry="2" />
<text  x="76.39" y="255.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.26%)</title><rect x="109.8" y="309" width="3.1" height="15.0" fill="rgb(211,6,7)" rx="2" ry="2" />
<text  x="112.76" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="1090.8" y="325" width="1.5" height="15.0" fill="rgb(226,78,6)" rx="2" ry="2" />
<text  x="1093.76" y="335.5" ></text>
</g>
<g >
<title>vmap_page_range_noflush (2 samples, 0.09%)</title><rect x="79.1" y="213" width="1.0" height="15.0" fill="rgb(206,224,17)" rx="2" ry="2" />
<text  x="82.11" y="223.5" ></text>
</g>
<g >
<title>unmap_region (103 samples, 4.54%)</title><rect x="15.2" y="261" width="53.5" height="15.0" fill="rgb(220,97,11)" rx="2" ry="2" />
<text  x="18.20" y="271.5" >unmap..</text>
</g>
<g >
<title>free_vmap_area_rb_augment_cb_rotate (1 samples, 0.04%)</title><rect x="74.9" y="181" width="0.6" height="15.0" fill="rgb(249,63,17)" rx="2" ry="2" />
<text  x="77.95" y="191.5" ></text>
</g>
<g >
<title>do_sched_yield (542 samples, 23.87%)</title><rect x="795.6" y="245" width="281.6" height="15.0" fill="rgb(208,203,46)" rx="2" ry="2" />
<text  x="798.63" y="255.5" >do_sched_yield</text>
</g>
<g >
<title>copy_process (35 samples, 1.54%)</title><rect x="70.8" y="261" width="18.2" height="15.0" fill="rgb(238,170,49)" rx="2" ry="2" />
<text  x="73.79" y="271.5" ></text>
</g>
</g>
</svg>
